# datasource
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.username=root
#spring.datasource.password=ENC(6YKavYkUMuJtySAlihNSd3zBfz0GwtmMAIq/VrAq3YyuW9vgMpwBH5eRIc6VMSyY)
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://192.168.1.188:3306/short-url
jasypt.encryptor.password=258EAFA5-E914-47DA-95CA-C5AB0DC85B11
# jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.open-in-view=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# sharding-jdbc database
spring.shardingsphere.datasource.names=ds-0,ds-1
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.username=root
spring.shardingsphere.datasource.common.password= ENC(6YKavYkUMuJtySAlihNSd3zBfz0GwtmMAIq/VrAq3YyuW9vgMpwBH5eRIc6VMSyY)
#spring.shardingsphere.datasource.ds_0.jdbc-url=jdbc:mysql://192.168.1.188:3306/short-url0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds_1.jdbc-url=jdbc:mysql://192.168.1.188:3306/short-url1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds-0.jdbc-url=jdbc:mysql://localhost:3306/short-url0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.shardingsphere.datasource.ds-1.jdbc-url=jdbc:mysql://localhost:3306/short-url1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
# sharding-jdbc table rules
# 绑定表规则列表
spring.shardingsphere.rules.sharding.binding-tables=dev_short_url
spring.shardingsphere.rules.sharding.tables.dev_short_url.actual-data-nodes=ds-$->{0..1}.dev_short_url_$->{0..1}
# 1.默认分库策略
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=url
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
# 2.分表策略
spring.shardingsphere.rules.sharding.tables.dev_short_url.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.dev_short_url.table-strategy.standard.sharding-algorithm-name=dev-short-url-inline
# 3.分表 分布式序列策略
spring.shardingsphere.rules.sharding.tables.dev_short_url.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.dev_short_url.key-generate-strategy.key-generator-name=snowflake
# 1.分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds-$->{url % 2}
# 2.分表算法
spring.shardingsphere.rules.sharding.sharding-algorithms.dev-short-url-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.dev-short-url-inline.props.algorithm-expression=dev_short_url_$->{id % 2}
# 3.分布式序列算法
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
# sharding-jdbc others
spring.shardingsphere.props.sql.show=true
# redis
#spring.redis.host=192.168.1.188
spring.redis.host=localhost
spring.redis.port=6379
# base_url
short.url.base_url=http://localhost:8080/