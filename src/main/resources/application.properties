spring.profiles.active=dev
# jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.open-in-view=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# jasypt
jasypt.encryptor.password=258EAFA5-E914-47DA-95CA-C5AB0DC85B11
# sharding-jdbc
spring.shardingsphere.props.sql.show=true
# 分库分表规则
spring.shardingsphere.rules.sharding.tables.dev_short_url.actual-data-nodes=ds-$->{0..1}.dev_short_url_$->{0..1}
# 1.默认分库策略
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=url
spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=url-hash
# 2.分表策略
spring.shardingsphere.rules.sharding.tables.dev_short_url.table-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.dev_short_url.table-strategy.standard.sharding-algorithm-name=id-hash
# 3.分表 分布式序列策略
#spring.shardingsphere.rules.sharding.tables.dev_short_url.key-generate-strategy.column=id
#spring.shardingsphere.rules.sharding.tables.dev_short_url.key-generate-strategy.key-generator-name=snowflake
# 1.分库算法
spring.shardingsphere.rules.sharding.sharding-algorithms.url-hash.type=HASH_MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.url-hash.props.sharding-count=2
# 2.分表算法
spring.shardingsphere.rules.sharding.sharding-algorithms.id-hash.type=HASH_MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.id-hash.props.sharding-count=2
# 3.分布式序列算法
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123